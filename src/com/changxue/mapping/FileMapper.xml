<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.changxue.dao.FileMapper" >
  <resultMap id="BaseResultMap" type="com.changxue.model.File" >
    <id column="fid" property="fid" jdbcType="VARCHAR" />
    <result column="filetype" property="filetype" jdbcType="VARCHAR" />
    <result column="extension" property="extension" jdbcType="VARCHAR" />
    <result column="uid" property="uid" jdbcType="VARCHAR" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="college" property="college" jdbcType="VARCHAR" />
    <result column="course" property="course" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="brief" property="brief" jdbcType="VARCHAR" />
    <result column="uploadtime" property="uploadtime" jdbcType="DATE" />
    <result column="size" property="size" jdbcType="INTEGER" />
    <result column="page" property="page" jdbcType="INTEGER" />
    <result column="download" property="download" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    fid, filetype, extension, uid, school, college, course, name, brief, uploadtime, 
    size, page, download, price
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.changxue.model.FileExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from file
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from file
    where fid = #{fid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from file
    where fid = #{fid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.changxue.model.FileExample" >
    delete from file
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.changxue.model.File" >
    insert into file (fid, filetype, extension, 
      uid, school, college, 
      course, name, brief, 
      uploadtime, size, page, 
      download, price)
    values (#{fid,jdbcType=VARCHAR}, #{filetype,jdbcType=VARCHAR}, #{extension,jdbcType=VARCHAR}, 
      #{uid,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, #{college,jdbcType=VARCHAR}, 
      #{course,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{brief,jdbcType=VARCHAR}, 
      #{uploadtime,jdbcType=DATE}, #{size,jdbcType=INTEGER}, #{page,jdbcType=INTEGER}, 
      #{download,jdbcType=INTEGER}, #{price,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.changxue.model.File" >
    insert into file
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fid != null" >
        fid,
      </if>
      <if test="filetype != null" >
        filetype,
      </if>
      <if test="extension != null" >
        extension,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="college != null" >
        college,
      </if>
      <if test="course != null" >
        course,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="brief != null" >
        brief,
      </if>
      <if test="uploadtime != null" >
        uploadtime,
      </if>
      <if test="size != null" >
        size,
      </if>
      <if test="page != null" >
        page,
      </if>
      <if test="download != null" >
        download,
      </if>
      <if test="price != null" >
        price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fid != null" >
        #{fid,jdbcType=VARCHAR},
      </if>
      <if test="filetype != null" >
        #{filetype,jdbcType=VARCHAR},
      </if>
      <if test="extension != null" >
        #{extension,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="college != null" >
        #{college,jdbcType=VARCHAR},
      </if>
      <if test="course != null" >
        #{course,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="brief != null" >
        #{brief,jdbcType=VARCHAR},
      </if>
      <if test="uploadtime != null" >
        #{uploadtime,jdbcType=DATE},
      </if>
      <if test="size != null" >
        #{size,jdbcType=INTEGER},
      </if>
      <if test="page != null" >
        #{page,jdbcType=INTEGER},
      </if>
      <if test="download != null" >
        #{download,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.changxue.model.FileExample" resultType="java.lang.Integer" >
    select count(*) from file
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update file
    <set >
      <if test="record.fid != null" >
        fid = #{record.fid,jdbcType=VARCHAR},
      </if>
      <if test="record.filetype != null" >
        filetype = #{record.filetype,jdbcType=VARCHAR},
      </if>
      <if test="record.extension != null" >
        extension = #{record.extension,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null" >
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.college != null" >
        college = #{record.college,jdbcType=VARCHAR},
      </if>
      <if test="record.course != null" >
        course = #{record.course,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.brief != null" >
        brief = #{record.brief,jdbcType=VARCHAR},
      </if>
      <if test="record.uploadtime != null" >
        uploadtime = #{record.uploadtime,jdbcType=DATE},
      </if>
      <if test="record.size != null" >
        size = #{record.size,jdbcType=INTEGER},
      </if>
      <if test="record.page != null" >
        page = #{record.page,jdbcType=INTEGER},
      </if>
      <if test="record.download != null" >
        download = #{record.download,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update file
    set fid = #{record.fid,jdbcType=VARCHAR},
      filetype = #{record.filetype,jdbcType=VARCHAR},
      extension = #{record.extension,jdbcType=VARCHAR},
      uid = #{record.uid,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      college = #{record.college,jdbcType=VARCHAR},
      course = #{record.course,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      brief = #{record.brief,jdbcType=VARCHAR},
      uploadtime = #{record.uploadtime,jdbcType=DATE},
      size = #{record.size,jdbcType=INTEGER},
      page = #{record.page,jdbcType=INTEGER},
      download = #{record.download,jdbcType=INTEGER},
      price = #{record.price,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.changxue.model.File" >
    update file
    <set >
      <if test="filetype != null" >
        filetype = #{filetype,jdbcType=VARCHAR},
      </if>
      <if test="extension != null" >
        extension = #{extension,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="college != null" >
        college = #{college,jdbcType=VARCHAR},
      </if>
      <if test="course != null" >
        course = #{course,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="brief != null" >
        brief = #{brief,jdbcType=VARCHAR},
      </if>
      <if test="uploadtime != null" >
        uploadtime = #{uploadtime,jdbcType=DATE},
      </if>
      <if test="size != null" >
        size = #{size,jdbcType=INTEGER},
      </if>
      <if test="page != null" >
        page = #{page,jdbcType=INTEGER},
      </if>
      <if test="download != null" >
        download = #{download,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
    </set>
    where fid = #{fid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.changxue.model.File" >
    update file
    set filetype = #{filetype,jdbcType=VARCHAR},
      extension = #{extension,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      college = #{college,jdbcType=VARCHAR},
      course = #{course,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      brief = #{brief,jdbcType=VARCHAR},
      uploadtime = #{uploadtime,jdbcType=DATE},
      size = #{size,jdbcType=INTEGER},
      page = #{page,jdbcType=INTEGER},
      download = #{download,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER}
    where fid = #{fid,jdbcType=VARCHAR}
  </update>
</mapper>